// Code generated by ent, DO NOT EDIT.

package metricopenaichatcompletiontokenusage

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/nekomeowww/insights-bot/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLTE(FieldID, id))
}

// PromptOperation applies equality check predicate on the "prompt_operation" field. It's identical to PromptOperationEQ.
func PromptOperation(v string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldPromptOperation, v))
}

// PromptCharacterLength applies equality check predicate on the "prompt_character_length" field. It's identical to PromptCharacterLengthEQ.
func PromptCharacterLength(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldPromptCharacterLength, v))
}

// PromptTokenUsage applies equality check predicate on the "prompt_token_usage" field. It's identical to PromptTokenUsageEQ.
func PromptTokenUsage(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldPromptTokenUsage, v))
}

// CompletionCharacterLength applies equality check predicate on the "completion_character_length" field. It's identical to CompletionCharacterLengthEQ.
func CompletionCharacterLength(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldCompletionCharacterLength, v))
}

// CompletionTokenUsage applies equality check predicate on the "completion_token_usage" field. It's identical to CompletionTokenUsageEQ.
func CompletionTokenUsage(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldCompletionTokenUsage, v))
}

// TotalTokenUsage applies equality check predicate on the "total_token_usage" field. It's identical to TotalTokenUsageEQ.
func TotalTokenUsage(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldTotalTokenUsage, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int64) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldCreatedAt, v))
}

// PromptOperationEQ applies the EQ predicate on the "prompt_operation" field.
func PromptOperationEQ(v string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldPromptOperation, v))
}

// PromptOperationNEQ applies the NEQ predicate on the "prompt_operation" field.
func PromptOperationNEQ(v string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNEQ(FieldPromptOperation, v))
}

// PromptOperationIn applies the In predicate on the "prompt_operation" field.
func PromptOperationIn(vs ...string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldIn(FieldPromptOperation, vs...))
}

// PromptOperationNotIn applies the NotIn predicate on the "prompt_operation" field.
func PromptOperationNotIn(vs ...string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNotIn(FieldPromptOperation, vs...))
}

// PromptOperationGT applies the GT predicate on the "prompt_operation" field.
func PromptOperationGT(v string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGT(FieldPromptOperation, v))
}

// PromptOperationGTE applies the GTE predicate on the "prompt_operation" field.
func PromptOperationGTE(v string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGTE(FieldPromptOperation, v))
}

// PromptOperationLT applies the LT predicate on the "prompt_operation" field.
func PromptOperationLT(v string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLT(FieldPromptOperation, v))
}

// PromptOperationLTE applies the LTE predicate on the "prompt_operation" field.
func PromptOperationLTE(v string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLTE(FieldPromptOperation, v))
}

// PromptOperationContains applies the Contains predicate on the "prompt_operation" field.
func PromptOperationContains(v string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldContains(FieldPromptOperation, v))
}

// PromptOperationHasPrefix applies the HasPrefix predicate on the "prompt_operation" field.
func PromptOperationHasPrefix(v string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldHasPrefix(FieldPromptOperation, v))
}

// PromptOperationHasSuffix applies the HasSuffix predicate on the "prompt_operation" field.
func PromptOperationHasSuffix(v string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldHasSuffix(FieldPromptOperation, v))
}

// PromptOperationEqualFold applies the EqualFold predicate on the "prompt_operation" field.
func PromptOperationEqualFold(v string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEqualFold(FieldPromptOperation, v))
}

// PromptOperationContainsFold applies the ContainsFold predicate on the "prompt_operation" field.
func PromptOperationContainsFold(v string) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldContainsFold(FieldPromptOperation, v))
}

// PromptCharacterLengthEQ applies the EQ predicate on the "prompt_character_length" field.
func PromptCharacterLengthEQ(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldPromptCharacterLength, v))
}

// PromptCharacterLengthNEQ applies the NEQ predicate on the "prompt_character_length" field.
func PromptCharacterLengthNEQ(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNEQ(FieldPromptCharacterLength, v))
}

// PromptCharacterLengthIn applies the In predicate on the "prompt_character_length" field.
func PromptCharacterLengthIn(vs ...int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldIn(FieldPromptCharacterLength, vs...))
}

// PromptCharacterLengthNotIn applies the NotIn predicate on the "prompt_character_length" field.
func PromptCharacterLengthNotIn(vs ...int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNotIn(FieldPromptCharacterLength, vs...))
}

// PromptCharacterLengthGT applies the GT predicate on the "prompt_character_length" field.
func PromptCharacterLengthGT(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGT(FieldPromptCharacterLength, v))
}

// PromptCharacterLengthGTE applies the GTE predicate on the "prompt_character_length" field.
func PromptCharacterLengthGTE(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGTE(FieldPromptCharacterLength, v))
}

// PromptCharacterLengthLT applies the LT predicate on the "prompt_character_length" field.
func PromptCharacterLengthLT(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLT(FieldPromptCharacterLength, v))
}

// PromptCharacterLengthLTE applies the LTE predicate on the "prompt_character_length" field.
func PromptCharacterLengthLTE(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLTE(FieldPromptCharacterLength, v))
}

// PromptTokenUsageEQ applies the EQ predicate on the "prompt_token_usage" field.
func PromptTokenUsageEQ(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldPromptTokenUsage, v))
}

// PromptTokenUsageNEQ applies the NEQ predicate on the "prompt_token_usage" field.
func PromptTokenUsageNEQ(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNEQ(FieldPromptTokenUsage, v))
}

// PromptTokenUsageIn applies the In predicate on the "prompt_token_usage" field.
func PromptTokenUsageIn(vs ...int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldIn(FieldPromptTokenUsage, vs...))
}

// PromptTokenUsageNotIn applies the NotIn predicate on the "prompt_token_usage" field.
func PromptTokenUsageNotIn(vs ...int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNotIn(FieldPromptTokenUsage, vs...))
}

// PromptTokenUsageGT applies the GT predicate on the "prompt_token_usage" field.
func PromptTokenUsageGT(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGT(FieldPromptTokenUsage, v))
}

// PromptTokenUsageGTE applies the GTE predicate on the "prompt_token_usage" field.
func PromptTokenUsageGTE(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGTE(FieldPromptTokenUsage, v))
}

// PromptTokenUsageLT applies the LT predicate on the "prompt_token_usage" field.
func PromptTokenUsageLT(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLT(FieldPromptTokenUsage, v))
}

// PromptTokenUsageLTE applies the LTE predicate on the "prompt_token_usage" field.
func PromptTokenUsageLTE(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLTE(FieldPromptTokenUsage, v))
}

// CompletionCharacterLengthEQ applies the EQ predicate on the "completion_character_length" field.
func CompletionCharacterLengthEQ(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldCompletionCharacterLength, v))
}

// CompletionCharacterLengthNEQ applies the NEQ predicate on the "completion_character_length" field.
func CompletionCharacterLengthNEQ(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNEQ(FieldCompletionCharacterLength, v))
}

// CompletionCharacterLengthIn applies the In predicate on the "completion_character_length" field.
func CompletionCharacterLengthIn(vs ...int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldIn(FieldCompletionCharacterLength, vs...))
}

// CompletionCharacterLengthNotIn applies the NotIn predicate on the "completion_character_length" field.
func CompletionCharacterLengthNotIn(vs ...int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNotIn(FieldCompletionCharacterLength, vs...))
}

// CompletionCharacterLengthGT applies the GT predicate on the "completion_character_length" field.
func CompletionCharacterLengthGT(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGT(FieldCompletionCharacterLength, v))
}

// CompletionCharacterLengthGTE applies the GTE predicate on the "completion_character_length" field.
func CompletionCharacterLengthGTE(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGTE(FieldCompletionCharacterLength, v))
}

// CompletionCharacterLengthLT applies the LT predicate on the "completion_character_length" field.
func CompletionCharacterLengthLT(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLT(FieldCompletionCharacterLength, v))
}

// CompletionCharacterLengthLTE applies the LTE predicate on the "completion_character_length" field.
func CompletionCharacterLengthLTE(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLTE(FieldCompletionCharacterLength, v))
}

// CompletionTokenUsageEQ applies the EQ predicate on the "completion_token_usage" field.
func CompletionTokenUsageEQ(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldCompletionTokenUsage, v))
}

// CompletionTokenUsageNEQ applies the NEQ predicate on the "completion_token_usage" field.
func CompletionTokenUsageNEQ(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNEQ(FieldCompletionTokenUsage, v))
}

// CompletionTokenUsageIn applies the In predicate on the "completion_token_usage" field.
func CompletionTokenUsageIn(vs ...int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldIn(FieldCompletionTokenUsage, vs...))
}

// CompletionTokenUsageNotIn applies the NotIn predicate on the "completion_token_usage" field.
func CompletionTokenUsageNotIn(vs ...int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNotIn(FieldCompletionTokenUsage, vs...))
}

// CompletionTokenUsageGT applies the GT predicate on the "completion_token_usage" field.
func CompletionTokenUsageGT(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGT(FieldCompletionTokenUsage, v))
}

// CompletionTokenUsageGTE applies the GTE predicate on the "completion_token_usage" field.
func CompletionTokenUsageGTE(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGTE(FieldCompletionTokenUsage, v))
}

// CompletionTokenUsageLT applies the LT predicate on the "completion_token_usage" field.
func CompletionTokenUsageLT(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLT(FieldCompletionTokenUsage, v))
}

// CompletionTokenUsageLTE applies the LTE predicate on the "completion_token_usage" field.
func CompletionTokenUsageLTE(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLTE(FieldCompletionTokenUsage, v))
}

// TotalTokenUsageEQ applies the EQ predicate on the "total_token_usage" field.
func TotalTokenUsageEQ(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldTotalTokenUsage, v))
}

// TotalTokenUsageNEQ applies the NEQ predicate on the "total_token_usage" field.
func TotalTokenUsageNEQ(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNEQ(FieldTotalTokenUsage, v))
}

// TotalTokenUsageIn applies the In predicate on the "total_token_usage" field.
func TotalTokenUsageIn(vs ...int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldIn(FieldTotalTokenUsage, vs...))
}

// TotalTokenUsageNotIn applies the NotIn predicate on the "total_token_usage" field.
func TotalTokenUsageNotIn(vs ...int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNotIn(FieldTotalTokenUsage, vs...))
}

// TotalTokenUsageGT applies the GT predicate on the "total_token_usage" field.
func TotalTokenUsageGT(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGT(FieldTotalTokenUsage, v))
}

// TotalTokenUsageGTE applies the GTE predicate on the "total_token_usage" field.
func TotalTokenUsageGTE(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGTE(FieldTotalTokenUsage, v))
}

// TotalTokenUsageLT applies the LT predicate on the "total_token_usage" field.
func TotalTokenUsageLT(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLT(FieldTotalTokenUsage, v))
}

// TotalTokenUsageLTE applies the LTE predicate on the "total_token_usage" field.
func TotalTokenUsageLTE(v int) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLTE(FieldTotalTokenUsage, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int64) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int64) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int64) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int64) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int64) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int64) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int64) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int64) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.MetricOpenAIChatCompletionTokenUsage) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.MetricOpenAIChatCompletionTokenUsage) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.MetricOpenAIChatCompletionTokenUsage) predicate.MetricOpenAIChatCompletionTokenUsage {
	return predicate.MetricOpenAIChatCompletionTokenUsage(func(s *sql.Selector) {
		p(s.Not())
	})
}
