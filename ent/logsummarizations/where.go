// Code generated by ent, DO NOT EDIT.

package logsummarizations

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/nekomeowww/insights-bot/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLTE(FieldID, id))
}

// ContentURL applies equality check predicate on the "content_url" field. It's identical to ContentURLEQ.
func ContentURL(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldContentURL, v))
}

// ContentTitle applies equality check predicate on the "content_title" field. It's identical to ContentTitleEQ.
func ContentTitle(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldContentTitle, v))
}

// ContentAuthor applies equality check predicate on the "content_author" field. It's identical to ContentAuthorEQ.
func ContentAuthor(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldContentAuthor, v))
}

// ContentText applies equality check predicate on the "content_text" field. It's identical to ContentTextEQ.
func ContentText(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldContentText, v))
}

// ContentSummarizedOutputs applies equality check predicate on the "content_summarized_outputs" field. It's identical to ContentSummarizedOutputsEQ.
func ContentSummarizedOutputs(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldContentSummarizedOutputs, v))
}

// FromPlatform applies equality check predicate on the "from_platform" field. It's identical to FromPlatformEQ.
func FromPlatform(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldFromPlatform, v))
}

// PromptTokenUsage applies equality check predicate on the "prompt_token_usage" field. It's identical to PromptTokenUsageEQ.
func PromptTokenUsage(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldPromptTokenUsage, v))
}

// CompletionTokenUsage applies equality check predicate on the "completion_token_usage" field. It's identical to CompletionTokenUsageEQ.
func CompletionTokenUsage(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldCompletionTokenUsage, v))
}

// TotalTokenUsage applies equality check predicate on the "total_token_usage" field. It's identical to TotalTokenUsageEQ.
func TotalTokenUsage(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldTotalTokenUsage, v))
}

// ModelName applies equality check predicate on the "model_name" field. It's identical to ModelNameEQ.
func ModelName(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldModelName, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldUpdatedAt, v))
}

// ContentURLEQ applies the EQ predicate on the "content_url" field.
func ContentURLEQ(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldContentURL, v))
}

// ContentURLNEQ applies the NEQ predicate on the "content_url" field.
func ContentURLNEQ(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNEQ(FieldContentURL, v))
}

// ContentURLIn applies the In predicate on the "content_url" field.
func ContentURLIn(vs ...string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldIn(FieldContentURL, vs...))
}

// ContentURLNotIn applies the NotIn predicate on the "content_url" field.
func ContentURLNotIn(vs ...string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNotIn(FieldContentURL, vs...))
}

// ContentURLGT applies the GT predicate on the "content_url" field.
func ContentURLGT(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGT(FieldContentURL, v))
}

// ContentURLGTE applies the GTE predicate on the "content_url" field.
func ContentURLGTE(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGTE(FieldContentURL, v))
}

// ContentURLLT applies the LT predicate on the "content_url" field.
func ContentURLLT(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLT(FieldContentURL, v))
}

// ContentURLLTE applies the LTE predicate on the "content_url" field.
func ContentURLLTE(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLTE(FieldContentURL, v))
}

// ContentURLContains applies the Contains predicate on the "content_url" field.
func ContentURLContains(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldContains(FieldContentURL, v))
}

// ContentURLHasPrefix applies the HasPrefix predicate on the "content_url" field.
func ContentURLHasPrefix(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldHasPrefix(FieldContentURL, v))
}

// ContentURLHasSuffix applies the HasSuffix predicate on the "content_url" field.
func ContentURLHasSuffix(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldHasSuffix(FieldContentURL, v))
}

// ContentURLEqualFold applies the EqualFold predicate on the "content_url" field.
func ContentURLEqualFold(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEqualFold(FieldContentURL, v))
}

// ContentURLContainsFold applies the ContainsFold predicate on the "content_url" field.
func ContentURLContainsFold(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldContainsFold(FieldContentURL, v))
}

// ContentTitleEQ applies the EQ predicate on the "content_title" field.
func ContentTitleEQ(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldContentTitle, v))
}

// ContentTitleNEQ applies the NEQ predicate on the "content_title" field.
func ContentTitleNEQ(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNEQ(FieldContentTitle, v))
}

// ContentTitleIn applies the In predicate on the "content_title" field.
func ContentTitleIn(vs ...string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldIn(FieldContentTitle, vs...))
}

// ContentTitleNotIn applies the NotIn predicate on the "content_title" field.
func ContentTitleNotIn(vs ...string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNotIn(FieldContentTitle, vs...))
}

// ContentTitleGT applies the GT predicate on the "content_title" field.
func ContentTitleGT(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGT(FieldContentTitle, v))
}

// ContentTitleGTE applies the GTE predicate on the "content_title" field.
func ContentTitleGTE(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGTE(FieldContentTitle, v))
}

// ContentTitleLT applies the LT predicate on the "content_title" field.
func ContentTitleLT(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLT(FieldContentTitle, v))
}

// ContentTitleLTE applies the LTE predicate on the "content_title" field.
func ContentTitleLTE(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLTE(FieldContentTitle, v))
}

// ContentTitleContains applies the Contains predicate on the "content_title" field.
func ContentTitleContains(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldContains(FieldContentTitle, v))
}

// ContentTitleHasPrefix applies the HasPrefix predicate on the "content_title" field.
func ContentTitleHasPrefix(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldHasPrefix(FieldContentTitle, v))
}

// ContentTitleHasSuffix applies the HasSuffix predicate on the "content_title" field.
func ContentTitleHasSuffix(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldHasSuffix(FieldContentTitle, v))
}

// ContentTitleEqualFold applies the EqualFold predicate on the "content_title" field.
func ContentTitleEqualFold(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEqualFold(FieldContentTitle, v))
}

// ContentTitleContainsFold applies the ContainsFold predicate on the "content_title" field.
func ContentTitleContainsFold(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldContainsFold(FieldContentTitle, v))
}

// ContentAuthorEQ applies the EQ predicate on the "content_author" field.
func ContentAuthorEQ(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldContentAuthor, v))
}

// ContentAuthorNEQ applies the NEQ predicate on the "content_author" field.
func ContentAuthorNEQ(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNEQ(FieldContentAuthor, v))
}

// ContentAuthorIn applies the In predicate on the "content_author" field.
func ContentAuthorIn(vs ...string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldIn(FieldContentAuthor, vs...))
}

// ContentAuthorNotIn applies the NotIn predicate on the "content_author" field.
func ContentAuthorNotIn(vs ...string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNotIn(FieldContentAuthor, vs...))
}

// ContentAuthorGT applies the GT predicate on the "content_author" field.
func ContentAuthorGT(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGT(FieldContentAuthor, v))
}

// ContentAuthorGTE applies the GTE predicate on the "content_author" field.
func ContentAuthorGTE(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGTE(FieldContentAuthor, v))
}

// ContentAuthorLT applies the LT predicate on the "content_author" field.
func ContentAuthorLT(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLT(FieldContentAuthor, v))
}

// ContentAuthorLTE applies the LTE predicate on the "content_author" field.
func ContentAuthorLTE(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLTE(FieldContentAuthor, v))
}

// ContentAuthorContains applies the Contains predicate on the "content_author" field.
func ContentAuthorContains(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldContains(FieldContentAuthor, v))
}

// ContentAuthorHasPrefix applies the HasPrefix predicate on the "content_author" field.
func ContentAuthorHasPrefix(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldHasPrefix(FieldContentAuthor, v))
}

// ContentAuthorHasSuffix applies the HasSuffix predicate on the "content_author" field.
func ContentAuthorHasSuffix(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldHasSuffix(FieldContentAuthor, v))
}

// ContentAuthorEqualFold applies the EqualFold predicate on the "content_author" field.
func ContentAuthorEqualFold(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEqualFold(FieldContentAuthor, v))
}

// ContentAuthorContainsFold applies the ContainsFold predicate on the "content_author" field.
func ContentAuthorContainsFold(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldContainsFold(FieldContentAuthor, v))
}

// ContentTextEQ applies the EQ predicate on the "content_text" field.
func ContentTextEQ(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldContentText, v))
}

// ContentTextNEQ applies the NEQ predicate on the "content_text" field.
func ContentTextNEQ(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNEQ(FieldContentText, v))
}

// ContentTextIn applies the In predicate on the "content_text" field.
func ContentTextIn(vs ...string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldIn(FieldContentText, vs...))
}

// ContentTextNotIn applies the NotIn predicate on the "content_text" field.
func ContentTextNotIn(vs ...string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNotIn(FieldContentText, vs...))
}

// ContentTextGT applies the GT predicate on the "content_text" field.
func ContentTextGT(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGT(FieldContentText, v))
}

// ContentTextGTE applies the GTE predicate on the "content_text" field.
func ContentTextGTE(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGTE(FieldContentText, v))
}

// ContentTextLT applies the LT predicate on the "content_text" field.
func ContentTextLT(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLT(FieldContentText, v))
}

// ContentTextLTE applies the LTE predicate on the "content_text" field.
func ContentTextLTE(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLTE(FieldContentText, v))
}

// ContentTextContains applies the Contains predicate on the "content_text" field.
func ContentTextContains(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldContains(FieldContentText, v))
}

// ContentTextHasPrefix applies the HasPrefix predicate on the "content_text" field.
func ContentTextHasPrefix(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldHasPrefix(FieldContentText, v))
}

// ContentTextHasSuffix applies the HasSuffix predicate on the "content_text" field.
func ContentTextHasSuffix(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldHasSuffix(FieldContentText, v))
}

// ContentTextEqualFold applies the EqualFold predicate on the "content_text" field.
func ContentTextEqualFold(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEqualFold(FieldContentText, v))
}

// ContentTextContainsFold applies the ContainsFold predicate on the "content_text" field.
func ContentTextContainsFold(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldContainsFold(FieldContentText, v))
}

// ContentSummarizedOutputsEQ applies the EQ predicate on the "content_summarized_outputs" field.
func ContentSummarizedOutputsEQ(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldContentSummarizedOutputs, v))
}

// ContentSummarizedOutputsNEQ applies the NEQ predicate on the "content_summarized_outputs" field.
func ContentSummarizedOutputsNEQ(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNEQ(FieldContentSummarizedOutputs, v))
}

// ContentSummarizedOutputsIn applies the In predicate on the "content_summarized_outputs" field.
func ContentSummarizedOutputsIn(vs ...string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldIn(FieldContentSummarizedOutputs, vs...))
}

// ContentSummarizedOutputsNotIn applies the NotIn predicate on the "content_summarized_outputs" field.
func ContentSummarizedOutputsNotIn(vs ...string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNotIn(FieldContentSummarizedOutputs, vs...))
}

// ContentSummarizedOutputsGT applies the GT predicate on the "content_summarized_outputs" field.
func ContentSummarizedOutputsGT(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGT(FieldContentSummarizedOutputs, v))
}

// ContentSummarizedOutputsGTE applies the GTE predicate on the "content_summarized_outputs" field.
func ContentSummarizedOutputsGTE(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGTE(FieldContentSummarizedOutputs, v))
}

// ContentSummarizedOutputsLT applies the LT predicate on the "content_summarized_outputs" field.
func ContentSummarizedOutputsLT(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLT(FieldContentSummarizedOutputs, v))
}

// ContentSummarizedOutputsLTE applies the LTE predicate on the "content_summarized_outputs" field.
func ContentSummarizedOutputsLTE(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLTE(FieldContentSummarizedOutputs, v))
}

// ContentSummarizedOutputsContains applies the Contains predicate on the "content_summarized_outputs" field.
func ContentSummarizedOutputsContains(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldContains(FieldContentSummarizedOutputs, v))
}

// ContentSummarizedOutputsHasPrefix applies the HasPrefix predicate on the "content_summarized_outputs" field.
func ContentSummarizedOutputsHasPrefix(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldHasPrefix(FieldContentSummarizedOutputs, v))
}

// ContentSummarizedOutputsHasSuffix applies the HasSuffix predicate on the "content_summarized_outputs" field.
func ContentSummarizedOutputsHasSuffix(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldHasSuffix(FieldContentSummarizedOutputs, v))
}

// ContentSummarizedOutputsEqualFold applies the EqualFold predicate on the "content_summarized_outputs" field.
func ContentSummarizedOutputsEqualFold(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEqualFold(FieldContentSummarizedOutputs, v))
}

// ContentSummarizedOutputsContainsFold applies the ContainsFold predicate on the "content_summarized_outputs" field.
func ContentSummarizedOutputsContainsFold(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldContainsFold(FieldContentSummarizedOutputs, v))
}

// FromPlatformEQ applies the EQ predicate on the "from_platform" field.
func FromPlatformEQ(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldFromPlatform, v))
}

// FromPlatformNEQ applies the NEQ predicate on the "from_platform" field.
func FromPlatformNEQ(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNEQ(FieldFromPlatform, v))
}

// FromPlatformIn applies the In predicate on the "from_platform" field.
func FromPlatformIn(vs ...int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldIn(FieldFromPlatform, vs...))
}

// FromPlatformNotIn applies the NotIn predicate on the "from_platform" field.
func FromPlatformNotIn(vs ...int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNotIn(FieldFromPlatform, vs...))
}

// FromPlatformGT applies the GT predicate on the "from_platform" field.
func FromPlatformGT(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGT(FieldFromPlatform, v))
}

// FromPlatformGTE applies the GTE predicate on the "from_platform" field.
func FromPlatformGTE(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGTE(FieldFromPlatform, v))
}

// FromPlatformLT applies the LT predicate on the "from_platform" field.
func FromPlatformLT(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLT(FieldFromPlatform, v))
}

// FromPlatformLTE applies the LTE predicate on the "from_platform" field.
func FromPlatformLTE(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLTE(FieldFromPlatform, v))
}

// PromptTokenUsageEQ applies the EQ predicate on the "prompt_token_usage" field.
func PromptTokenUsageEQ(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldPromptTokenUsage, v))
}

// PromptTokenUsageNEQ applies the NEQ predicate on the "prompt_token_usage" field.
func PromptTokenUsageNEQ(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNEQ(FieldPromptTokenUsage, v))
}

// PromptTokenUsageIn applies the In predicate on the "prompt_token_usage" field.
func PromptTokenUsageIn(vs ...int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldIn(FieldPromptTokenUsage, vs...))
}

// PromptTokenUsageNotIn applies the NotIn predicate on the "prompt_token_usage" field.
func PromptTokenUsageNotIn(vs ...int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNotIn(FieldPromptTokenUsage, vs...))
}

// PromptTokenUsageGT applies the GT predicate on the "prompt_token_usage" field.
func PromptTokenUsageGT(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGT(FieldPromptTokenUsage, v))
}

// PromptTokenUsageGTE applies the GTE predicate on the "prompt_token_usage" field.
func PromptTokenUsageGTE(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGTE(FieldPromptTokenUsage, v))
}

// PromptTokenUsageLT applies the LT predicate on the "prompt_token_usage" field.
func PromptTokenUsageLT(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLT(FieldPromptTokenUsage, v))
}

// PromptTokenUsageLTE applies the LTE predicate on the "prompt_token_usage" field.
func PromptTokenUsageLTE(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLTE(FieldPromptTokenUsage, v))
}

// CompletionTokenUsageEQ applies the EQ predicate on the "completion_token_usage" field.
func CompletionTokenUsageEQ(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldCompletionTokenUsage, v))
}

// CompletionTokenUsageNEQ applies the NEQ predicate on the "completion_token_usage" field.
func CompletionTokenUsageNEQ(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNEQ(FieldCompletionTokenUsage, v))
}

// CompletionTokenUsageIn applies the In predicate on the "completion_token_usage" field.
func CompletionTokenUsageIn(vs ...int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldIn(FieldCompletionTokenUsage, vs...))
}

// CompletionTokenUsageNotIn applies the NotIn predicate on the "completion_token_usage" field.
func CompletionTokenUsageNotIn(vs ...int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNotIn(FieldCompletionTokenUsage, vs...))
}

// CompletionTokenUsageGT applies the GT predicate on the "completion_token_usage" field.
func CompletionTokenUsageGT(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGT(FieldCompletionTokenUsage, v))
}

// CompletionTokenUsageGTE applies the GTE predicate on the "completion_token_usage" field.
func CompletionTokenUsageGTE(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGTE(FieldCompletionTokenUsage, v))
}

// CompletionTokenUsageLT applies the LT predicate on the "completion_token_usage" field.
func CompletionTokenUsageLT(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLT(FieldCompletionTokenUsage, v))
}

// CompletionTokenUsageLTE applies the LTE predicate on the "completion_token_usage" field.
func CompletionTokenUsageLTE(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLTE(FieldCompletionTokenUsage, v))
}

// TotalTokenUsageEQ applies the EQ predicate on the "total_token_usage" field.
func TotalTokenUsageEQ(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldTotalTokenUsage, v))
}

// TotalTokenUsageNEQ applies the NEQ predicate on the "total_token_usage" field.
func TotalTokenUsageNEQ(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNEQ(FieldTotalTokenUsage, v))
}

// TotalTokenUsageIn applies the In predicate on the "total_token_usage" field.
func TotalTokenUsageIn(vs ...int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldIn(FieldTotalTokenUsage, vs...))
}

// TotalTokenUsageNotIn applies the NotIn predicate on the "total_token_usage" field.
func TotalTokenUsageNotIn(vs ...int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNotIn(FieldTotalTokenUsage, vs...))
}

// TotalTokenUsageGT applies the GT predicate on the "total_token_usage" field.
func TotalTokenUsageGT(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGT(FieldTotalTokenUsage, v))
}

// TotalTokenUsageGTE applies the GTE predicate on the "total_token_usage" field.
func TotalTokenUsageGTE(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGTE(FieldTotalTokenUsage, v))
}

// TotalTokenUsageLT applies the LT predicate on the "total_token_usage" field.
func TotalTokenUsageLT(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLT(FieldTotalTokenUsage, v))
}

// TotalTokenUsageLTE applies the LTE predicate on the "total_token_usage" field.
func TotalTokenUsageLTE(v int) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLTE(FieldTotalTokenUsage, v))
}

// ModelNameEQ applies the EQ predicate on the "model_name" field.
func ModelNameEQ(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldModelName, v))
}

// ModelNameNEQ applies the NEQ predicate on the "model_name" field.
func ModelNameNEQ(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNEQ(FieldModelName, v))
}

// ModelNameIn applies the In predicate on the "model_name" field.
func ModelNameIn(vs ...string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldIn(FieldModelName, vs...))
}

// ModelNameNotIn applies the NotIn predicate on the "model_name" field.
func ModelNameNotIn(vs ...string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNotIn(FieldModelName, vs...))
}

// ModelNameGT applies the GT predicate on the "model_name" field.
func ModelNameGT(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGT(FieldModelName, v))
}

// ModelNameGTE applies the GTE predicate on the "model_name" field.
func ModelNameGTE(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGTE(FieldModelName, v))
}

// ModelNameLT applies the LT predicate on the "model_name" field.
func ModelNameLT(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLT(FieldModelName, v))
}

// ModelNameLTE applies the LTE predicate on the "model_name" field.
func ModelNameLTE(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLTE(FieldModelName, v))
}

// ModelNameContains applies the Contains predicate on the "model_name" field.
func ModelNameContains(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldContains(FieldModelName, v))
}

// ModelNameHasPrefix applies the HasPrefix predicate on the "model_name" field.
func ModelNameHasPrefix(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldHasPrefix(FieldModelName, v))
}

// ModelNameHasSuffix applies the HasSuffix predicate on the "model_name" field.
func ModelNameHasSuffix(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldHasSuffix(FieldModelName, v))
}

// ModelNameEqualFold applies the EqualFold predicate on the "model_name" field.
func ModelNameEqualFold(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEqualFold(FieldModelName, v))
}

// ModelNameContainsFold applies the ContainsFold predicate on the "model_name" field.
func ModelNameContainsFold(v string) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldContainsFold(FieldModelName, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int64) predicate.LogSummarizations {
	return predicate.LogSummarizations(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.LogSummarizations) predicate.LogSummarizations {
	return predicate.LogSummarizations(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.LogSummarizations) predicate.LogSummarizations {
	return predicate.LogSummarizations(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.LogSummarizations) predicate.LogSummarizations {
	return predicate.LogSummarizations(func(s *sql.Selector) {
		p(s.Not())
	})
}
