name: Testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**/*.md"

jobs:
  # scan:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # 代码签出
  #     - uses: actions/checkout@v3

  #     # 设定 Go 环境
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: "^1.20.0"
  #         cache: true

  #     # Get values for cache paths to be used in later steps
  #     - name: Setup Go Cache PATH
  #       id: go-cache-paths
  #       run: |
  #         echo "go-build=$(go env GOCACHE)"  >> $GITHUB_OUTPUT
  #         echo "go-mod=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT

  #     # Cache go build cache, used to speedup go test
  #     - name: Go Build Cache
  #       uses: actions/cache@v3
  #       with:
  #         path: ${{ steps.go-cache-paths.outputs.go-build }}
  #         key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

  #     # Cache go mod cache, used to speedup builds
  #     - name: Go Mod Cache
  #       uses: actions/cache@v3
  #       with:
  #         path: ${{ steps.go-cache-paths.outputs.go-mod }}
  #         key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

  #     - name: Setup govulncheck
  #       run: go install golang.org/x/vuln/cmd/govulncheck@latest

  #     # 代码检查潜在错误
  #     - name: Vet (Scan for potential mistakes)
  #       run: |
  #         go vet ./...
  #         govulncheck ./...
  buildtest:
    name: Build Test
    runs-on: ubuntu-latest
    steps:
      # 代码签出
      - uses: actions/checkout@v3

      # 设定 Go 环境
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.20.0"
          cache: true

      # Get values for cache paths to be used in later steps
      - name: Setup Go Cache PATH
        id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)"  >> $GITHUB_OUTPUT
          echo "go-mod=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      # 测试构建
      - name: Test Build
        run: go build -a -o "release/insights-bot" "github.com/nekomeowww/insights-bot/cmd/insights-bot"

  ent_check:
    name: Check entgo.io codegen
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.20"
      - uses: ent/contrib/ci@master

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: "^1.20.0"
          cache: true

      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.4.0

  unittest:
    name: Unit Test
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: '123456'
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "^1.20.0"
          cache: true

      # Get values for cache paths to be used in later steps
      - name: Setup Go Cache PATH
        id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)"  >> $GITHUB_OUTPUT
          echo "go-mod=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Unit tests
        run: |
          go test ./... -coverprofile=coverage.out -covermode=atomic -p=1
          go tool cover -func coverage.out
