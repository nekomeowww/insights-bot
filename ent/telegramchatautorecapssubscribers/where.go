// Code generated by ent, DO NOT EDIT.

package telegramchatautorecapssubscribers

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/nekomeowww/insights-bot/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldLTE(FieldID, id))
}

// ChatID applies equality check predicate on the "chat_id" field. It's identical to ChatIDEQ.
func ChatID(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldEQ(FieldChatID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldEQ(FieldUserID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldEQ(FieldUpdatedAt, v))
}

// ChatIDEQ applies the EQ predicate on the "chat_id" field.
func ChatIDEQ(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldEQ(FieldChatID, v))
}

// ChatIDNEQ applies the NEQ predicate on the "chat_id" field.
func ChatIDNEQ(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldNEQ(FieldChatID, v))
}

// ChatIDIn applies the In predicate on the "chat_id" field.
func ChatIDIn(vs ...int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldIn(FieldChatID, vs...))
}

// ChatIDNotIn applies the NotIn predicate on the "chat_id" field.
func ChatIDNotIn(vs ...int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldNotIn(FieldChatID, vs...))
}

// ChatIDGT applies the GT predicate on the "chat_id" field.
func ChatIDGT(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldGT(FieldChatID, v))
}

// ChatIDGTE applies the GTE predicate on the "chat_id" field.
func ChatIDGTE(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldGTE(FieldChatID, v))
}

// ChatIDLT applies the LT predicate on the "chat_id" field.
func ChatIDLT(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldLT(FieldChatID, v))
}

// ChatIDLTE applies the LTE predicate on the "chat_id" field.
func ChatIDLTE(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldLTE(FieldChatID, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldLTE(FieldUserID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int64) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TelegramChatAutoRecapsSubscribers) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TelegramChatAutoRecapsSubscribers) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TelegramChatAutoRecapsSubscribers) predicate.TelegramChatAutoRecapsSubscribers {
	return predicate.TelegramChatAutoRecapsSubscribers(sql.NotPredicates(p))
}
