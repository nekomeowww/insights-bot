// Code generated by ent, DO NOT EDIT.

package telegramchatfeatureflags

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the telegramchatfeatureflags type in the database.
	Label = "telegram_chat_feature_flags"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldChatID holds the string denoting the chat_id field in the database.
	FieldChatID = "chat_id"
	// FieldChatType holds the string denoting the chat_type field in the database.
	FieldChatType = "chat_type"
	// FieldFeatureChatHistoriesRecap holds the string denoting the feature_chat_histories_recap field in the database.
	FieldFeatureChatHistoriesRecap = "feature_chat_histories_recap"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the telegramchatfeatureflags in the database.
	Table = "telegram_chat_feature_flags"
)

// Columns holds all SQL columns for telegramchatfeatureflags fields.
var Columns = []string{
	FieldID,
	FieldChatID,
	FieldChatType,
	FieldFeatureChatHistoriesRecap,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() int64
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() int64
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the TelegramChatFeatureFlags queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByChatID orders the results by the chat_id field.
func ByChatID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldChatID, opts...).ToFunc()
}

// ByChatType orders the results by the chat_type field.
func ByChatType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldChatType, opts...).ToFunc()
}

// ByFeatureChatHistoriesRecap orders the results by the feature_chat_histories_recap field.
func ByFeatureChatHistoriesRecap(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFeatureChatHistoriesRecap, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
