// Code generated by ent, DO NOT EDIT.

package metricopenaichatcompletiontokenusage

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the metricopenaichatcompletiontokenusage type in the database.
	Label = "metric_open_ai_chat_completion_token_usage"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPromptOperation holds the string denoting the prompt_operation field in the database.
	FieldPromptOperation = "prompt_operation"
	// FieldPromptCharacterLength holds the string denoting the prompt_character_length field in the database.
	FieldPromptCharacterLength = "prompt_character_length"
	// FieldPromptTokenUsage holds the string denoting the prompt_token_usage field in the database.
	FieldPromptTokenUsage = "prompt_token_usage"
	// FieldCompletionCharacterLength holds the string denoting the completion_character_length field in the database.
	FieldCompletionCharacterLength = "completion_character_length"
	// FieldCompletionTokenUsage holds the string denoting the completion_token_usage field in the database.
	FieldCompletionTokenUsage = "completion_token_usage"
	// FieldTotalTokenUsage holds the string denoting the total_token_usage field in the database.
	FieldTotalTokenUsage = "total_token_usage"
	// FieldModelName holds the string denoting the model_name field in the database.
	FieldModelName = "model_name"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the metricopenaichatcompletiontokenusage in the database.
	Table = "metric_open_ai_chat_completion_token_usages"
)

// Columns holds all SQL columns for metricopenaichatcompletiontokenusage fields.
var Columns = []string{
	FieldID,
	FieldPromptOperation,
	FieldPromptCharacterLength,
	FieldPromptTokenUsage,
	FieldCompletionCharacterLength,
	FieldCompletionTokenUsage,
	FieldTotalTokenUsage,
	FieldModelName,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultPromptOperation holds the default value on creation for the "prompt_operation" field.
	DefaultPromptOperation string
	// DefaultPromptCharacterLength holds the default value on creation for the "prompt_character_length" field.
	DefaultPromptCharacterLength int
	// DefaultPromptTokenUsage holds the default value on creation for the "prompt_token_usage" field.
	DefaultPromptTokenUsage int
	// DefaultCompletionCharacterLength holds the default value on creation for the "completion_character_length" field.
	DefaultCompletionCharacterLength int
	// DefaultCompletionTokenUsage holds the default value on creation for the "completion_token_usage" field.
	DefaultCompletionTokenUsage int
	// DefaultTotalTokenUsage holds the default value on creation for the "total_token_usage" field.
	DefaultTotalTokenUsage int
	// DefaultModelName holds the default value on creation for the "model_name" field.
	DefaultModelName string
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() int64
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the MetricOpenAIChatCompletionTokenUsage queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByPromptOperation orders the results by the prompt_operation field.
func ByPromptOperation(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPromptOperation, opts...).ToFunc()
}

// ByPromptCharacterLength orders the results by the prompt_character_length field.
func ByPromptCharacterLength(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPromptCharacterLength, opts...).ToFunc()
}

// ByPromptTokenUsage orders the results by the prompt_token_usage field.
func ByPromptTokenUsage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPromptTokenUsage, opts...).ToFunc()
}

// ByCompletionCharacterLength orders the results by the completion_character_length field.
func ByCompletionCharacterLength(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCompletionCharacterLength, opts...).ToFunc()
}

// ByCompletionTokenUsage orders the results by the completion_token_usage field.
func ByCompletionTokenUsage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCompletionTokenUsage, opts...).ToFunc()
}

// ByTotalTokenUsage orders the results by the total_token_usage field.
func ByTotalTokenUsage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTotalTokenUsage, opts...).ToFunc()
}

// ByModelName orders the results by the model_name field.
func ByModelName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldModelName, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}
