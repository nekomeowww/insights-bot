// Code generated by ent, DO NOT EDIT.

package logchathistoriesrecap

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the logchathistoriesrecap type in the database.
	Label = "log_chat_histories_recap"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldChatID holds the string denoting the chat_id field in the database.
	FieldChatID = "chat_id"
	// FieldRecapInputs holds the string denoting the recap_inputs field in the database.
	FieldRecapInputs = "recap_inputs"
	// FieldRecapOutputs holds the string denoting the recap_outputs field in the database.
	FieldRecapOutputs = "recap_outputs"
	// FieldFromPlatform holds the string denoting the from_platform field in the database.
	FieldFromPlatform = "from_platform"
	// FieldPromptTokenUsage holds the string denoting the prompt_token_usage field in the database.
	FieldPromptTokenUsage = "prompt_token_usage"
	// FieldCompletionTokenUsage holds the string denoting the completion_token_usage field in the database.
	FieldCompletionTokenUsage = "completion_token_usage"
	// FieldTotalTokenUsage holds the string denoting the total_token_usage field in the database.
	FieldTotalTokenUsage = "total_token_usage"
	// FieldRecapType holds the string denoting the recap_type field in the database.
	FieldRecapType = "recap_type"
	// FieldModelName holds the string denoting the model_name field in the database.
	FieldModelName = "model_name"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the logchathistoriesrecap in the database.
	Table = "log_chat_histories_recaps"
)

// Columns holds all SQL columns for logchathistoriesrecap fields.
var Columns = []string{
	FieldID,
	FieldChatID,
	FieldRecapInputs,
	FieldRecapOutputs,
	FieldFromPlatform,
	FieldPromptTokenUsage,
	FieldCompletionTokenUsage,
	FieldTotalTokenUsage,
	FieldRecapType,
	FieldModelName,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultChatID holds the default value on creation for the "chat_id" field.
	DefaultChatID int64
	// DefaultRecapInputs holds the default value on creation for the "recap_inputs" field.
	DefaultRecapInputs string
	// DefaultRecapOutputs holds the default value on creation for the "recap_outputs" field.
	DefaultRecapOutputs string
	// DefaultFromPlatform holds the default value on creation for the "from_platform" field.
	DefaultFromPlatform int
	// DefaultPromptTokenUsage holds the default value on creation for the "prompt_token_usage" field.
	DefaultPromptTokenUsage int
	// DefaultCompletionTokenUsage holds the default value on creation for the "completion_token_usage" field.
	DefaultCompletionTokenUsage int
	// DefaultTotalTokenUsage holds the default value on creation for the "total_token_usage" field.
	DefaultTotalTokenUsage int
	// DefaultRecapType holds the default value on creation for the "recap_type" field.
	DefaultRecapType int
	// DefaultModelName holds the default value on creation for the "model_name" field.
	DefaultModelName string
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() int64
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() int64
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the LogChatHistoriesRecap queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByChatID orders the results by the chat_id field.
func ByChatID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldChatID, opts...).ToFunc()
}

// ByRecapInputs orders the results by the recap_inputs field.
func ByRecapInputs(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRecapInputs, opts...).ToFunc()
}

// ByRecapOutputs orders the results by the recap_outputs field.
func ByRecapOutputs(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRecapOutputs, opts...).ToFunc()
}

// ByFromPlatform orders the results by the from_platform field.
func ByFromPlatform(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFromPlatform, opts...).ToFunc()
}

// ByPromptTokenUsage orders the results by the prompt_token_usage field.
func ByPromptTokenUsage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPromptTokenUsage, opts...).ToFunc()
}

// ByCompletionTokenUsage orders the results by the completion_token_usage field.
func ByCompletionTokenUsage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCompletionTokenUsage, opts...).ToFunc()
}

// ByTotalTokenUsage orders the results by the total_token_usage field.
func ByTotalTokenUsage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTotalTokenUsage, opts...).ToFunc()
}

// ByRecapType orders the results by the recap_type field.
func ByRecapType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRecapType, opts...).ToFunc()
}

// ByModelName orders the results by the model_name field.
func ByModelName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldModelName, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
