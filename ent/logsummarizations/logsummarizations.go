// Code generated by ent, DO NOT EDIT.

package logsummarizations

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the logsummarizations type in the database.
	Label = "log_summarizations"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldContentURL holds the string denoting the content_url field in the database.
	FieldContentURL = "content_url"
	// FieldContentTitle holds the string denoting the content_title field in the database.
	FieldContentTitle = "content_title"
	// FieldContentAuthor holds the string denoting the content_author field in the database.
	FieldContentAuthor = "content_author"
	// FieldContentText holds the string denoting the content_text field in the database.
	FieldContentText = "content_text"
	// FieldContentSummarizedOutputs holds the string denoting the content_summarized_outputs field in the database.
	FieldContentSummarizedOutputs = "content_summarized_outputs"
	// FieldFromPlatform holds the string denoting the from_platform field in the database.
	FieldFromPlatform = "from_platform"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the logsummarizations in the database.
	Table = "log_summarizations"
)

// Columns holds all SQL columns for logsummarizations fields.
var Columns = []string{
	FieldID,
	FieldContentURL,
	FieldContentTitle,
	FieldContentAuthor,
	FieldContentText,
	FieldContentSummarizedOutputs,
	FieldFromPlatform,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultContentURL holds the default value on creation for the "content_url" field.
	DefaultContentURL string
	// DefaultContentTitle holds the default value on creation for the "content_title" field.
	DefaultContentTitle string
	// DefaultContentAuthor holds the default value on creation for the "content_author" field.
	DefaultContentAuthor string
	// DefaultContentText holds the default value on creation for the "content_text" field.
	DefaultContentText string
	// DefaultContentSummarizedOutputs holds the default value on creation for the "content_summarized_outputs" field.
	DefaultContentSummarizedOutputs string
	// DefaultFromPlatform holds the default value on creation for the "from_platform" field.
	DefaultFromPlatform int
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() int64
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() int64
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the LogSummarizations queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByContentURL orders the results by the content_url field.
func ByContentURL(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldContentURL, opts...).ToFunc()
}

// ByContentTitle orders the results by the content_title field.
func ByContentTitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldContentTitle, opts...).ToFunc()
}

// ByContentAuthor orders the results by the content_author field.
func ByContentAuthor(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldContentAuthor, opts...).ToFunc()
}

// ByContentText orders the results by the content_text field.
func ByContentText(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldContentText, opts...).ToFunc()
}

// ByContentSummarizedOutputs orders the results by the content_summarized_outputs field.
func ByContentSummarizedOutputs(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldContentSummarizedOutputs, opts...).ToFunc()
}

// ByFromPlatform orders the results by the from_platform field.
func ByFromPlatform(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFromPlatform, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
